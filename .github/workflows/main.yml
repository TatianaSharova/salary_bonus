name: Salary Bonus Workflow

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}
    
    # - name: Recreate .env and creds.json file
    #   run: |
    #     mkdir -p /app
    #     echo "${{ secrets.CREDS_JSON }}" > /app/creds.json
    #     echo "${{ secrets.ENV }}" > /app/.env

    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        push: true
        tags: ${{ secrets.DOCKER_USERNAME }}/salary_bonus:latest


  deploy:
    runs-on: ubuntu-latest
    needs:
      - build
    if: github.ref == 'refs/heads/main'
    steps:
    - name: Checkout repo
      uses: actions/checkout@v3
    - name: Executing remote ssh commands to deploy
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USER }}
        key: ${{ secrets.SSH_KEY }}
        passphrase: ${{ secrets.SSH_PASSPHRASE }}
        script_stop: true
        script: |
          sudo echo "${{ secrets.CREDS_JSON }}" > creds.json
          sudo echo "${{ secrets.ENV }}" > .env

          sudo docker pull ${{ secrets.DOCKER_USERNAME }}/salary_bonus:latest
          if [ "$(sudo docker ps -aq -f name=your_python_container)" ]; then
            sudo docker stop salary_container
            sudo docker rm salary_container
          fi

          sudo docker run -d --name salary_container ${{ secrets.DOCKER_USERNAME }}/salary_bonus:latest
          sudo docker cp creds.json salary_container:/app/creds.json
          sudo docker cp .env salary_container:/app/.env

          rm creds.json .env
          sudo docker image rm $(sudo docker image ls -f "dangling=true" -q)

  send_message:
    runs-on: ubuntu-latest
    needs: deploy
    steps:
    - name: Send message
      uses: appleboy/telegram-action@master
      with:
        to: ${{ secrets.TELEGRAM_TO }}
        token: ${{ secrets.TELEGRAM_TOKEN }}
        message: Деплой salary bonus успешно выполнен!